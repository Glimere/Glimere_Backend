/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  ValidateNested,
  IsDate,
  IsBoolean,
} from "class-validator";
import { ApparelType } from "../../apparelType/base/ApparelType";
import { Type } from "class-transformer";
import { Brand } from "../../brand/base/Brand";
import { CartItem } from "../../cartItem/base/CartItem";
import { Decimal } from "decimal.js";
import { MainCategory } from "../../mainCategory/base/MainCategory";
import { Material } from "../../material/base/Material";
import { Model } from "../../model/base/Model";
import { Review } from "../../review/base/Review";
import { Size } from "../../size/base/Size";
import { SubCategory } from "../../subCategory/base/SubCategory";
import { SubSubcategory } from "../../subSubcategory/base/SubSubcategory";
import { WishlistItems } from "../../wishlistItems/base/WishlistItems";

@ObjectType()
class Apparel {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  apparelDesc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  apparelName!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  apparelPrice!: number | null;

  @ApiProperty({
    required: false,
    type: () => ApparelType,
  })
  @ValidateNested()
  @Type(() => ApparelType)
  @IsOptional()
  apparelType?: ApparelType | null;

  @ApiProperty({
    required: false,
    type: () => Brand,
  })
  @ValidateNested()
  @Type(() => Brand)
  @IsOptional()
  brand?: Brand | null;

  @ApiProperty({
    required: false,
    type: () => CartItem,
  })
  @ValidateNested()
  @Type(() => CartItem)
  @IsOptional()
  cartItem?: CartItem | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  discountedPrice!: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  discountEndDate!: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  discountPercentage!: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  discountStartDate!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDiscounted!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => MainCategory,
  })
  @ValidateNested()
  @Type(() => MainCategory)
  @IsOptional()
  mainCategory?: MainCategory | null;

  @ApiProperty({
    required: false,
    type: () => [Material],
  })
  @ValidateNested()
  @Type(() => Material)
  @IsOptional()
  materials?: Array<Material>;

  @ApiProperty({
    required: false,
    type: () => [Model],
  })
  @ValidateNested()
  @Type(() => Model)
  @IsOptional()
  models?: Array<Model>;

  @ApiProperty({
    required: false,
    type: () => [Review],
  })
  @ValidateNested()
  @Type(() => Review)
  @IsOptional()
  reviews?: Array<Review>;

  @ApiProperty({
    required: false,
    type: () => [Size],
  })
  @ValidateNested()
  @Type(() => Size)
  @IsOptional()
  sizes?: Array<Size>;

  @ApiProperty({
    required: false,
    type: () => [SubCategory],
  })
  @ValidateNested()
  @Type(() => SubCategory)
  @IsOptional()
  subCategories?: Array<SubCategory>;

  @ApiProperty({
    required: false,
    type: () => [SubSubcategory],
  })
  @ValidateNested()
  @Type(() => SubSubcategory)
  @IsOptional()
  subSubcategories?: Array<SubSubcategory>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => WishlistItems,
  })
  @ValidateNested()
  @Type(() => WishlistItems)
  @IsOptional()
  wishlistItems?: WishlistItems | null;
}

export { Apparel as Apparel };
