/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApparelUpdateManyWithoutBrandsInput } from "./ApparelUpdateManyWithoutBrandsInput";
import { ValidateNested, IsOptional, IsString, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { FollowingUpdateManyWithoutBrandsInput } from "./FollowingUpdateManyWithoutBrandsInput";

@InputType()
class BrandUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ApparelUpdateManyWithoutBrandsInput,
  })
  @ValidateNested()
  @Type(() => ApparelUpdateManyWithoutBrandsInput)
  @IsOptional()
  @Field(() => ApparelUpdateManyWithoutBrandsInput, {
    nullable: true,
  })
  apparels?: ApparelUpdateManyWithoutBrandsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  desc?: string | null;

  @ApiProperty({
    required: false,
    type: () => FollowingUpdateManyWithoutBrandsInput,
  })
  @ValidateNested()
  @Type(() => FollowingUpdateManyWithoutBrandsInput)
  @IsOptional()
  @Field(() => FollowingUpdateManyWithoutBrandsInput, {
    nullable: true,
  })
  followings?: FollowingUpdateManyWithoutBrandsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  foundingdate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shortName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { BrandUpdateInput as BrandUpdateInput };
