/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Card } from "../../card/base/Card";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { Cart } from "../../cart/base/Cart";
import { Following } from "../../following/base/Following";
import { Review } from "../../review/base/Review";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { ShippingAddress } from "../../shippingAddress/base/ShippingAddress";
import { Size } from "../../size/base/Size";
import { Wishlist } from "../../wishlist/base/Wishlist";

@ObjectType()
class User {
  @ApiProperty({
    required: false,
    type: () => [Card],
  })
  @ValidateNested()
  @Type(() => Card)
  @IsOptional()
  cards?: Array<Card>;

  @ApiProperty({
    required: false,
    type: () => [Cart],
  })
  @ValidateNested()
  @Type(() => Cart)
  @IsOptional()
  carts?: Array<Cart>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Following],
  })
  @ValidateNested()
  @Type(() => Following)
  @IsOptional()
  followings?: Array<Following>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Review],
  })
  @ValidateNested()
  @Type(() => Review)
  @IsOptional()
  reviews?: Array<Review>;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [ShippingAddress],
  })
  @ValidateNested()
  @Type(() => ShippingAddress)
  @IsOptional()
  shippingAddress?: Array<ShippingAddress>;

  @ApiProperty({
    required: false,
    type: () => [Size],
  })
  @ValidateNested()
  @Type(() => Size)
  @IsOptional()
  sizes?: Array<Size>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: () => [Wishlist],
  })
  @ValidateNested()
  @Type(() => Wishlist)
  @IsOptional()
  wishlists?: Array<Wishlist>;
}

export { User as User };
